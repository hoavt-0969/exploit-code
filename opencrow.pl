#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
use IO::Socket::SSL;
use LWP::UserAgent;
use HTTP::Cookies;
use Getopt::Long;
use Path::Tiny;

say <<help;

 o-o             o-o
o   o           /
|   |o-o o-oo-oO    o-oo   o   o
o   o|  ||-'|  | ||   | | || / || /
 o-o O-o o-oo  o o-oo-o  o   o
     |
     o

+ OpenCrow v.2.0
---------------------------------------------------------------------------

Options :

-l,   --lhost         The listen address
-p,   --lport         The listen port | reverse-shell
-r,   --rhost         The target address range or CIDR identifier
-P,   --rport         The target port (TCP)
-v,   --vport         HTTP server virtual port (this value must be different from LPORT)
-u,   --username      The username to authenticate with.
-x,   --password      The password to authenticate with.

Example : ./suncrow3.sh -l 192.168.1.1 -p 4444 -r 192.168.1.2 -P 7080 -v 5555 -u admin -x admin\n
help

my $ua = LWP::UserAgent->new(
    'send_te' => '0',
    'cookie_jar' => HTTP::Cookies->new(
        file => path('/tmp/cookie.txt'),
        autosave => 1,
    )
);

$ua->proxy(http => 'http://127.0.0.1:8080');
$ua->ssl_opts(
    SSL_verify_mode => IO::Socket::SSL::SSL_VERIFY_NONE,
    SSL_hostname => '',
    verify_hostname => 0

);
my @_headers = (
    'Accept' => '*/*',
    'Accept-Encoding' => 'gzip,x-gzip,deflate,x-bzip2,bzip2',
    'Accept-Language' => 'en-GB,en-US',
    'Host' => 'testphp.vulnweb.com:80',
    'Content-Type'   => 'application/x-www-form-urlencoded'
);

sub _req1(){

    my $req = HTTP::Request->new(
    'POST' => 'http://testphp.vulnweb.com/userinfo.php',
    [_headers],
    "uname=test&pass=test");
}

my $res = $ua->request(_req1,);



__END__
